{
  // vue 代码模板
  "vue-ts": {
    "scope": "vue",
    "prefix": "ts",
    "body": [
      "<!--",
      " * @Description: ${1:描述}",
      " * @Author: ${2:作者}",
      " * @Date: $CURRENT_YEAR-$CURRENT_MONTH-$CURRENT_DATE $CURRENT_HOUR:$CURRENT_MINUTE:$CURRENT_SECOND",
      " -->",
      "<template>",
      "  <div :class=\"$$style.wrapper\">",
      "    ${3:示例文字}",
      "  </div>",
      "</template>",
      "",
      "<script lang=\"ts\">",
      "// see: https://github.com/kaorun343/vue-property-decorator",
      "import { Component, Vue } from 'vue-property-decorator'",
      "",
      "/// [import] vue组件,其他,CSS Module ///",
      "// import { getAsync } from '@/utils/highOrder'",
      "// import STYLE from './index.module.scss'",
      "",
      "/// 常量(UPPER_CASE),单例/变量(camelCase),函数(无副作用,camelCase) ///",
      "// const ModuleOne: any = getAsync(() =>",
      "//  import(/* webpackChunkName: \"ihOne\" */ './ModuleOne')",
      "// )",
      "",
      "/// 选项 name,components,directives,filters,extends,mixins ///",
      "@Component // @Component({ components: { ModuleOne } })",
      "export default class extends Vue {",
      "  /// [model] (@Model('change') readonly attr!: string) ///",
      "  /// [props] (@Prop() readonly attr!: string) ///",
      "  /// [data] (attr: string = '响应式属性' // 除了 undefined) ///",
      "  /// 非响应式属性 (attr?: string // undefined) ///",
      "  /// [computed] (get attr() {} set attr(){}) ///",
      "  // private get STYLE() { return STYLE }",
      "  /// [LifeCycle] (private beforeCreate(){}/.../destroyed(){}) ///",
      "  /// [watch] (@Watch('attr') onAttrChange(val, oldVal) {}) ///",
      "  /// [methods] (method(){}) ///",
      "}",
      "</script>",
      "",
      "<style lang=\"scss\" module>",
      ".wrapper {",
      "  text-align: center;",
      "}",
      "</style>",
      ""
    ],
    "description": "vue单文件组件代码模板，使用TypeScript和scss(module)"
  },
  "vue-js": {
    "scope": "vue",
    "prefix": "js",
    "body": [
      "<!--",
      " * @Description: ${1:描述}",
      " * @Author: ${2:作者}",
      " * @Date: $CURRENT_YEAR-$CURRENT_MONTH-$CURRENT_DATE $CURRENT_HOUR:$CURRENT_MINUTE:$CURRENT_SECOND",
      " -->",
      "<template>",
      "  <div :class=\"$$style.wrapper\">",
      "    ${3:示例文字}",
      "  </div>",
      "</template>",
      "",
      "<script>",
      "// see: https://github.com/kaorun343/vue-property-decorator",
      "import { Component, Vue } from 'vue-property-decorator'",
      "",
      "/// [import] vue组件,其他,CSS Module ///",
      "// import { getAsync } from '@/utils/highOrder'",
      "// import STYLE from './index.module.scss'",
      "",
      "/// 常量(UPPER_CASE),单例/变量(camelCase),函数(无副作用,camelCase) ///",
      "// const ModuleOne = getAsync(() =>",
      "//  import(/* webpackChunkName: \"ihOne\" */ './ModuleOne')",
      "// )",
      "",
      "/// 选项 name,components,directives,filters,extends,mixins ///",
      "@Component // @Component({ components: { ModuleOne } })",
      "export default class extends Vue {",
      "  /// [model] (@Model('change') attr) ///",
      "  /// [props] (@Prop() attr) ///",
      "  /// [data] (attr = '响应式属性' // 除了 undefined) ///",
      "  /// 非响应式属性 (attr // undefined) ///",
      "  /// [computed] (get attr() {} set attr(){}) ///",
      "  // get STYLE() { return STYLE }",
      "  /// [LifeCycle] (beforeCreate(){}/.../destroyed(){}) ///",
      "  /// [watch] (@Watch('attr') onAttrChange(val, oldVal) {}) ///",
      "  /// [methods] (method(){}) ///",
      "}",
      "</script>",
      "",
      "<style lang=\"scss\" module>",
      ".wrapper {",
      "  text-align: center;",
      "}",
      "</style>",
      ""
    ],
    "description": "vue单文件组件代码模板，使用JavaScript和scss(module)"
  },
  "tsx-vue": {
    "scope": "typescriptreact",
    "prefix": "vue",
    "body": [
      "/*",
      " * @Description: ${1:描述}",
      " * @Author: ${2:作者}",
      " * @Date: $CURRENT_YEAR-$CURRENT_MONTH-$CURRENT_DATE $CURRENT_HOUR:$CURRENT_MINUTE:$CURRENT_SECOND",
      " */",
      "import { CreateElement } from 'vue'",
      "// see: https://github.com/kaorun343/vue-property-decorator",
      "import { Component, Vue } from 'vue-property-decorator'",
      "",
      "/// [import] vue组件,其他,CSS Module ///",
      "// import { getAsync } from '@/utils/highOrder'",
      "// import STYLE from './index.module.scss'",
      "",
      "/// 常量(UPPER_CASE),单例/变量(camelCase),函数(无副作用,camelCase) ///",
      "// const ModuleOne: any = getAsync(() =>",
      "//  import(/* webpackChunkName: \"ihOne\" */ './ModuleOne')",
      "// )",
      "",
      "/// 选项 name,directives,filters,extends,mixins ///",
      "@Component",
      "export default class extends Vue {",
      "  /// [model] (@Model('change') readonly attr!: string) ///",
      "  /// [props] (@Prop() readonly attr!: string) ///",
      "  /// [data] (attr: string = '响应式属性' // 除了 undefined) ///",
      "  /// 非响应式属性 (attr?: string // undefined) ///",
      "  /// [computed] (get attr() {} set attr(){}) ///",
      "  /// [LifeCycle] (private beforeCreate(){}/.../destroyed(){}) ///",
      "  /// [watch] (@Watch('attr') onAttrChange(val, oldVal) {}) ///",
      "  /// [methods] (method(){}) ///",
      "  // see: https://github.com/vuejs/jsx#installation",
      "  // eslint-disable-next-line @typescript-eslint/no-unused-vars",
      "  private render(h: CreateElement) {",
      "    return (",
      "      <div>",
      "        {/* 模块一 */}",
      "        {/* <ModuleOne class={STYLE.wrapper} nativeOn={{ click(e) {} }}>",
      "          <template slot='title'>",
      "            <h4 on={{ click(e) {} }}>模块一</h4>",
      "          </template>",
      "        </ModuleOne> */}",
      "      </div>",
      "    )",
      "  }",
      "}",
      ""
    ],
    "description": "vue tsx代码模板"
  },
  "jsx-vue": {
    "scope": "javascriptreact",
    "prefix": "vue",
    "body": [
      "/*",
      " * @Description: ${1:描述}",
      " * @Author: ${2:作者}",
      " * @Date: $CURRENT_YEAR-$CURRENT_MONTH-$CURRENT_DATE $CURRENT_HOUR:$CURRENT_MINUTE:$CURRENT_SECOND",
      " */",
      "// see: https://github.com/kaorun343/vue-property-decorator",
      "import { Component, Vue } from 'vue-property-decorator'",
      "",
      "/// [import] vue组件,其他,CSS Module ///",
      "// import { getAsync } from '@/utils/highOrder'",
      "// import STYLE from './index.module.scss'",
      "",
      "/// 常量(UPPER_CASE),单例/变量(camelCase),函数(无副作用,camelCase) ///",
      "// const ModuleOne = getAsync(() =>",
      "//  import(/* webpackChunkName: \"ihOne\" */ './ModuleOne')",
      "// )",
      "",
      "/// 选项 name,directives,filters,extends,mixins ///",
      "@Component",
      "export default class extends Vue {",
      "  /// [model] (@Model('change') attr) ///",
      "  /// [props] (@Prop() attr) ///",
      "  /// [data] (attr = '响应式属性' // 除了 undefined) ///",
      "  /// 非响应式属性 (attr // undefined) ///",
      "  /// [computed] (get attr() {} set attr(){}) ///",
      "  /// [LifeCycle] (beforeCreate(){}/.../destroyed(){}) ///",
      "  /// [watch] (@Watch('attr') onAttrChange(val, oldVal) {}) ///",
      "  /// [methods] (method(){}) ///",
      "  // see: https://github.com/vuejs/jsx#installation",
      "  // eslint-disable-next-line @typescript-eslint/no-unused-vars",
      "  render(h) {",
      "    return (",
      "      <div>",
      "        {/* 模块一 */}",
      "        {/* <ModuleOne class={STYLE.wrapper} nativeOn={{ click(e) {} }}>",
      "          <template slot='title'>",
      "            <h4 on={{ click(e) {} }}>模块一</h4>",
      "          </template>",
      "        </ModuleOne> */}",
      "      </div>",
      "    )",
      "  }",
      "}",
      ""
    ],
    "description": "vue jsx代码模板"
  },
  "ts-vuex": {
    "scope": "typescript",
    "prefix": "vuex",
    "body": [
      "/** see: https://championswimmer.in/vuex-module-decorators",
      " * @Description: ${1:动态模块}",
      " * @Author: ${2:作者}",
      " * @Date: $CURRENT_YEAR-$CURRENT_MONTH-$CURRENT_DATE $CURRENT_HOUR:$CURRENT_MINUTE:$CURRENT_SECOND",
      " */",
      "import {",
      "  VuexModule,",
      "  Module,",
      "  getModule,",
      "  Mutation,",
      "  Action,",
      "} from 'vuex-module-decorators'",
      "import store from '${3:../}'",
      "",
      "/** ${1:动态模块} */",
      "interface ${4:IDynamic} {",
      "  /** 是否动态 */",
      "  dynamic: boolean",
      "",
      "  // ...",
      "}",
      "",
      "/** ${1:动态模块} */",
      "@Module({ dynamic: true, namespaced: true, name: '${5:dynamic}', store })",
      "class ${6:Dynamic} extends VuexModule implements ${4:IDynamic} {",
      "  /// State & Getter(public) ///",
      "  dynamic = true",
      "",
      "  /// Mutation ///",
      "  @Mutation",
      "  DYNAMIC(dynamic: boolean) {",
      "    this.dynamic = dynamic",
      "  }",
      "",
      "  /// Action ///",
      "  /** 初始化是否动态属性 */",
      "  @Action",
      "  async initDynamic() {",
      "    const dynamic = await Promise.resolve(true)",
      "    this.DYNAMIC(dynamic)",
      "  }",
      "}",
      "",
      "export default getModule(${6:Dynamic})",
      "export { ${4:IDynamic} }",
      "",
    ],
    "description": "vuex模块class语法"
  },
  "js-vuex": {
    "scope": "javascript",
    "prefix": "vuex",
    "body": [
      "/** see: https://championswimmer.in/vuex-module-decorators",
      " * @Description: ${1:动态模块}",
      " * @Author: ${2:作者}",
      " * @Date: $CURRENT_YEAR-$CURRENT_MONTH-$CURRENT_DATE $CURRENT_HOUR:$CURRENT_MINUTE:$CURRENT_SECOND",
      " */",
      "import {",
      "  VuexModule,",
      "  Module,",
      "  getModule,",
      "  Mutation,",
      "  Action,",
      "} from 'vuex-module-decorators'",
      "import store from '${3:../}'",
      "",
      "/** ${1:动态模块} */",
      "@Module({ dynamic: true, namespaced: true, name: '${4:dynamic}', store })",
      "class ${5:Dynamic} extends VuexModule {",
      "  /// State & Getter(public) ///",
      "  dynamic = true",
      "",
      "  /// Mutation ///",
      "  @Mutation",
      "  DYNAMIC(dynamic) {",
      "    this.dynamic = dynamic",
      "  }",
      "",
      "  /// Action ///",
      "  /** 初始化是否动态属性 */",
      "  @Action",
      "  async initDynamic() {",
      "    const dynamic = await Promise.resolve(true)",
      "    this.DYNAMIC(dynamic)",
      "  }",
      "}",
      "",
      "export default getModule(${5:Dynamic})",
      "",
    ],
    "description": "vuex模块class语法"
  },
}